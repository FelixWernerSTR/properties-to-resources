<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>[=mavenproject.name]</artifactId>
	<packaging>jar</packaging>

	<name>[=mavenproject.name]</name>

	<properties>
	</properties>

	<profiles>
		<profile>
			<id>build-images</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>${jib-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>build image:[=mavenproject.name]:${project.version}-${BUILD_NUMBER}</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<allowInsecureRegistries>true</allowInsecureRegistries>
									<from>
										<image>${nexus.registry.url}/${basis.tomcat.image}</image>
										<auth>
											<username>${nexus.registry.username}</username>
											<password>${nexus.registry.password}</password>
										</auth>
									</from>
									<to>
										<image>${nexus.registry.url}/[=mavenproject.name]:${project.version}-${BUILD_NUMBER}</image>
										<tags>
											<tag>latest</tag>
										</tags>
										<auth>
											<username>${nexus.registry.username}</username>
											<password>${nexus.registry.password}</password>
										</auth>
									</to>
									<container>
										<entrypoint>INHERIT</entrypoint>
										<ports>
											<port>8080</port>
										</ports>
										<environment>
											<SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
										</environment>
										<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
									</container>
									<extraDirectories>
										<paths>
											<path>
												<from>${project.build.directory}/[=mavenproject.name]/[=mavenproject.artifactId]</from>
												<into>/usr/local/tomcat/webapps/[=mavenproject.artifactId]</into>
											</path>
										</paths>
									</extraDirectories>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>unpack-and-configure-web-apps</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy wars for [=mavenproject.name]</id>
								<phase>validate</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>[=mavenproject.groupId]</groupId>
											<artifactId>[=mavenproject.artifactId]</artifactId>
											<version>${[=mavenproject.property1].version}</version>
											<type>war</type>
											<outputDirectory>${project.build.directory}/[=mavenproject.name]/[=mavenproject.artifactId]</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>de.svi.devops</groupId>
											<artifactId>properties-to-resources</artifactId>
											<version>${project.version}</version>
											<classifier>templates</classifier>
											<type>jar</type>
											<outputDirectory>${project.build.directory}/openshift/templates</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>de.svi.devops</groupId>
											<artifactId>configmap-properties</artifactId>
											<version>${project.version}</version>
											<classifier>configmap</classifier>
											<type>zip</type>
											<outputDirectory>${project.build.directory}/configmap</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>yaml-build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>de.fw.maven.plugins</groupId>
						<artifactId>yaml-builder-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>yaml-upload</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.repaint.maven</groupId>
						<artifactId>tiles-maven-plugin</artifactId>
						<version>2.25</version>
						<configuration>
							<tiles>
								<tile>de.fw.devops:yaml-upload-nexus-tile:1.1.0-SNAPSHOT</tile>
							</tiles>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>yaml-oc-apply</id> <!-- vorausgesetzt yaml-build wurde ausgefÃ¼hrt und oc.exe ist in PATH! -->
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>executing: chmod 775 [=mavenproject.name]</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<skip>${skip.chmod.on.windows}</skip>
									<executable>chmod</executable>
									<workingDirectory>${project.build.directory}/openshift/develop/myapp-dev/[=mavenproject.name]</workingDirectory>
									<arguments>
										<argument>-R</argument>
										<argument>775</argument>
										<argument>${project.build.directory}/openshift/develop/myapp-dev/[=mavenproject.name]</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>executing yaml to svi-ew-svis</id>
								<phase>package</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>de.fw.devops.utils.openshift.OcApplyFileExecutor</mainClass>
									<workingDirectory>${project.build.directory}/openshift/develop/myapp-dev/[=mavenproject.name]</workingDirectory>
									<arguments>
										<argument>${project.build.directory}/openshift/develop/myapp-dev/[=mavenproject.name]/[=mavenproject.name]-applyAllScripts.${executable.extension}
										</argument>
										<argument>${project.build.directory}/openshift/develop/myapp-dev/[=mavenproject.name]</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>de.fw.devops</groupId>
			<artifactId>properties-to-resources</artifactId>
			<version>1.1.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
  