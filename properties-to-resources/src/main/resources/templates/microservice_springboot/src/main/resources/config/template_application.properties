#converted with: http://mageddo.com/tools/yaml-converter
# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-prod.properties if you use the "prod" profile.
#
# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

# Conditionally disable springdoc on missing api-docs profile
spring.application.name=[=mavenproject.artifactId]
springdoc.api-docs.enabled=false
management.endpoints.web.base-path=/
management.endpoints.web.exposure.include=configprops, env, health, info, logfile, loggers, prometheus, threaddump, heapdump, beans
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.endpoint.health.group.liveness.include=livenessState
management.endpoint.health.group.readiness.include=readinessState,db
management.endpoint.jhimetrics.enabled=true
management.info.git.mode=full
management.info.env.enabled=true
management.health.mail.enabled=false
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=60
management.metrics.enable.http=true
management.metrics.enable.jvm=true
management.metrics.enable.logback=true
management.metrics.enable.process=true
management.metrics.enable.system=true
management.metrics.distribution.percentiles-histogram.all=true
management.metrics.distribution.percentiles.all=0, 0.5, 0.75, 0.95, 0.99, 1.0
management.metrics.tags.application=${spring.application.name}
management.metrics.web.server.request.autotime.enabled=true
# The commented value for `active` can be replaced with valid Spring profiles to load.
# Otherwise, it will be filled in by maven when building the JAR file
# Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
# active: #spring.profiles.active#
spring.profiles.active=prod
spring.profiles.group.dev=prod
spring.jmx.enabled=false
spring.messages.basename=i18n/messages
spring.main.allow-bean-definition-overriding=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.task.execution.thread-name-prefix=[=mavenproject.name?lower_case]-task-
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=10000
spring.task.scheduling.thread-name-prefix=[=mavenproject.name?lower_case]-scheduling-
spring.task.scheduling.pool.size=2
spring.thymeleaf.mode=HTML
spring.output.ansi.console-available=true
server.servlet.session.cookie.http-only=true
springdoc.show-actuator=true
info.display-ribbon-on-profiles=prod